@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>汎用アンケート</h1>
</div>
<div id="Questions" class="p-3">
    <ul data-bind="foreach: questions">
        <li data-bind="template: kind"></li>
    </ul>
</div>
<div class="row">
</div>
<script type="text/template" id="tab">
    <ul data-bind="foreach:items" class="nav nav-tabs">
        <li class="nav-item"><a class="nav-link" data-toggle="tab" data-bind="text: text, attr:{href:'#'+code}"></a></li>
    </ul>
    <div data-bind="foreach:items" class="tab-content border-left border-right border-bottom">
        <div data-bind="attr:{id: code}" class="tab-pane">
            <div data-bind="template: kind"></div>
        </div>
    </div>
</script>
<script type="text/template" id="pane">
    <div data-bind="attr:{id: code}" class="tab-pane">
        <!-- ko foreach: items -->
        <div data-bind="template: kind"></div>
        <!-- /ko -->
    </div>
</script>
<script type="text/template" id="radio">
    <section class="p-2">
        <p data-bind="text: text"></p>
        <!-- ko foreach: items.filter( function( i) {return i.kind == 'option'}) -->
        <div data-bind="template: kind" class="custom-control custom-radio custom-control-inline"></div>
        <!-- /ko -->
        <!-- ko foreach: items.filter( function( i) {return i.kind != 'option'}) -->
        <div data-bind="template: kind"></div>
        <!-- /ko -->
    </section>
</script>
<script type="text/template" id="text">
    <section class="p-2">
        <p data-bind="text: text"></p>
        <input type="text" data-bind="attr:{name:code}">
    </section>
</script>
<script type="text/template" id="block">
    <section data-bind="if:true" class="p-2">
        <p data-bind="text: text"></p>
        <!-- ko foreach: items -->
        <div data-bind="template: kind"></div>
        <!-- /ko -->
    </section>
</script>
<script type="text/template" id="option">
        <input type="radio" data-bind="attr:{id: code, name: $parent.code, value: code}" class="custom-control-input">
        <label data-bind="text: text, attr: {for: code}" class="custom-control-label"></label>
</script>
@Scripts.Render("~/bundles/knockout")
@section scripts{
    <script type="text/javascript">
        var StandardOptions = {
            YesNo: [{ code: "A_yes", kind: "option", text: "はい" }, { code: "A_no", kind: "option", text: "いいえ" }],
            Numeric3: [{ code: "1", kind: "option", text: "1" }, { code: "2", kind: "option", text: "2" }, { code: "3", kind: "option", text: "3" }]
        };
        var ViewModel = function () {
            var self = this;
            this.questions = ko.observableArray([]);
        };
        function setupQuestions(nodes, parent) {
            return nodes.map(function (v) {
                switch (v.kind) {
                    case "tab":
                        v.data = ko.observable();
                        v.items = setupQuestions(v.items, v);
                        break;
                    case "pane":
                        break;
                    case "radio":
                        v.data = ko.observable();
                        v.items = setupQuestions(v.items, v);
                        break;
                    case "option":
                        v.checked = parent.data;
                        break;
                    case "text":
                        v.data = ko.observable();
                        break;
                    case "block":
                        if (v.depend) {
                            for (var k in Object.keys(v.depend)) {
                                v.values = v.depend[k];
                                break;  // 暫定の仕様
                            }
                        }
                        v.data = parent.data;
                        break;
                }
                return v;
            })

        }
        document.addEventListener("DOMContentLoaded", function () {
            var model = new ViewModel();
            $.getJSON('@Url.Content("~/Questions.json")').done(function (data) {
                model.questions(setupQuestions(data, null));
            }).fail(function (errs) {
                console.log(errs);
            });
            ko.applyBindings(model, document.body);
        });
    </script>
}