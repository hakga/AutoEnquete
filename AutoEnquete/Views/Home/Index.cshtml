@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
</div>
<div id="Questions">
    <ul data-bind="foreach: questions">
        <li data-bind="template: kind"></li>
    </ul>
</div>
<div class="row">
</div>
<script type="text/template" id="tab">
    <ul data-bind="foreach:items" class="nav nav-tabs">
        <li class="nav-item"><a class="nav-link" data-toggle="tab" data-bind="text: text, attr:{href:'#'+code}"></a></li>
    </ul>
    <div data-bind="foreach:items" class="tab-content">
        <div data-bind="attr:{id: code}" class="tab-pane">
            <div data-bind="template: kind"></div>
        </div>
    </div>
</script>
<script type="text/template" id="pane">
    <div data-bind="attr:{id: code}" class="tab-pane">
        <!-- ko foreach: items -->
        <div data-bind="template: kind"></div>
        <!-- /ko -->
    </div>
</script>
<script type="text/template" id="radio">
    <!-- ko foreach: items -->
    <div data-bind="template: kind"></div>
    <!-- /ko -->
</script>
<script type="text/template" id="text">
    <p data-bind="text: text"></p>
</script>
<script type="text/template" id="block">
    <p data-bind="text: text"></p>
</script>
<script type="text/template" id="option">
    <p data-bind="text: text"></p>
</script>
@Scripts.Render("~/bundles/knockout")
@section scripts{
    <script type="text/javascript">
        var Options = {
            YesNo: [{ code: "A_yes", kind: "option", text: "はい" }, { code: "A_no", kind: "option", text: "いいえ" }],
            Numeric3: [{ code: "1", kind: "option", text: "1" }, { code: "2", kind: "option", text: "2" }, { code: "3", kind: "option", text: "3" }]
        };
        var ViewModel = function () {
            var self = this;
            this.questions = ko.observableArray([]);
        };
        document.addEventListener("DOMContentLoaded", function () {
            var model = new ViewModel();
            $.getJSON('@Url.Content("~/Questions.json")').done(function (data) {
                model.questions(data);
            }).fail(function (errs) {
                console.log(errs);
            });
            ko.applyBindings(model, document.body);
        });
    </script>
}